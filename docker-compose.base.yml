version: "3"

services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    user: ${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app_network
    restart: unless-stopped
    command: -p ${POSTGRES_PORT}
    healthcheck:
      test: ['CMD', 'pg_isready', '-p',  '${POSTGRES_PORT}']
      interval: 5s
      timeout: 5s
      retries: 5

  scylla:
    image: scylladb/scylla:latest
    container_name: scylla
    ports:
      - "9042:9042"
    networks:
      - app_network
    restart: unless-stopped
    command: --authorizer=AllowAllAuthorizer
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES;"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build: "./admin-server"
    platform: linux/amd64
    ports:
      - "3003:3003"
    networks:
      - app_network
    env_file:
      - .env
    volumes:
      - ${PWD}/../.env:/.env
      - tmp:/tmp/tableflow-files
    stop_signal: SIGTERM
    stop_grace_period: 30s
    restart: on-failure
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3003 && echo -e "GET /public/health HTTP/1.1\r\nhost: 127.0.0.1:3003\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "ok"'
      interval: 10s
      timeout: 5s
      retries: 5
